<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imageList.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="imageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABk
        CAAAAk1TRnQBSQFMAwEBAAFMAQABTAEAAREBAAERAQAE/wEJAQAI/wFCAU0BNgEEBgABNgEEAgABKAMA
        AUQDAAERAwABAQEAAQgFAAGEAQQYAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/wYAAbwB7wHtAuwBkgEH
        OwAB8AHvARQGQwHsAbw4AAHwAewJQwESAQc2AAHwAewLQwESAbw1AAHvBkMBEwHtARUEQwHsNQAB6wZD
        AeoBAAGSARUEQwEHNAABEgJDARUB7AL3Ae8BAAHwAZIBFQNDAZI0AAEVAkMBFAcAAZIBFQJDAew0AAND
        ARQHAAG8ARMCQwHsNAABFAJDARQBvAUAAbwB6wNDAe00AAHqA0MDEwFtAQABvAFtBEMB7zQAAewGQwES
        AbwB6wRDARQBvDQAAQcBFQVDARUBEgVDAe82AAHvARQKQwHsAfA3AAHvARUIQwHsAfA5AAEHAewB6gEU
        AUMBFQESAesB7wHwegABQgFNAT4HAAE+AwABKAMAAUQDAAERAwABAQEAAQEFAAHMFwAD/wEAAfgBDwGA
        CQAB4AEDAYAJAAHAAQEBgAkAAYABAAGACQABgAEAAYAJAAGAAUAKAAGAAUAKAAGHAfAKAAGHAfAKAAGD
        AeAKAAGAAUAKAAGACwABgAEAAYAJAAHAAQABgAkAAeABAQGACQAB8AEDAYAJAAL/AYAJAAs=
</value>
  </data>
  <data name="imgRefresh.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAe
        aQAAHmkBUPjxMQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAWUSURBVHhe3Zvb
        q1VFHMe312Ne0lDfRAUfEgJJhRKF6FWkjEIMKdDCJ0F6CDKzG1JIYg8WBD0EvQQRZX9AF3qJwB6qhy70
        UBFIRVcIowscP9911uW358zea9ZaM7u9zhc+h9lnzfx+a35r7b1mZv1mMDs7O1HQMtgOt8E+2AO3wG64
        CWZ87bqA7oav4FPYO3TMfogNWgn3wDPwFnwB/4AOjuJf0Im+Cg/B7bDCZz8EdBas/StDx+2HGKDlcCe8
        Bn+Cdd6WX+FF2OXzOQp0DlxbYktZxzboAtoML8NvYJ3F5hM4Cet851GALoDbtmB7Wc82agNaA8/CX2Cd
        pOYneAAWec7pIrj1Ld0DgJbAcfgBrPFJ8yHszM9pEbwEbh2XbgFAut0/zo1NA//BC/CK+d84biz7YjsW
        AtKj68fcUF9pdwegY/B3bqTPNAsAWgzjflX7RuMAnDeNFwLhAUBHTMOufAdvwqNwHxwCDZrugBPwPLwN
        qX9jwgKAdsLVvFFbPodTsMnnwwfSV04/ts/Bt+Da7Ep9ANAG6OL8A9jjs90EpMmTxhsxAzE+AGgpvJ9X
        bsr3cNhntwtIE6uvwfXXhtoAnDaVm3AJVvtsdgHpgrwBrr+2jA4AWguafdkGIWg+MG9c3hUUu/NibACe
        NBVDOe7aiQFK0XnhDwBaB7/nlUK5YG3EAqXqvBgZgKdNpRDegSXWRgxQys6L+QFAN8AfeYUQvoH1RfuY
        oLr5fFe8AdBIzFaqY3/RNiZoK9StG3bFGwA9wmylcVwu2sUGHTB+UjEcAKTVnSZreQcLA7FBq0Grwq7P
        WPwC15X+cqe35gdD0MlFf95b0Cq4H/RIFk/kPJ5zBh7L0aBNaIIlNO8QOqa2Txn0v/LqZ75yh01Gfiet
        gb4z92cweM90sI4drpE+M/cnfMqr70/S23/SSDPgdnQUl3xG+oy0Me9cCKd9RvqMtC3vXAgnfEamCaSV
        pI8C2QuDm8Ht6CiO+pxOE0jrjO55j0Kv6LM/voM+DvmcThPoqDnfOnTxs9vAd3v42OdzOk2gJnOabV4j
        fQY1GdRt9BrpM6jJpG7Ga6SvIL0e12DN7aiPq1kb10ifQTtMB+t4N2vjGukzSKkztpPjOJW1cQwofe1h
        HYzII3AvrLK+YoN0+zdZR9idtTMG9Oal6YpwE3Ry0V+aFKCDuZ8QfobFWTtjQFffVkrBgcJfbNBl46eO
        18t2xkDqAGihc2vhLyZof+4jlAfLtsZI6gBcLHzFBK0HLdG7/kahx+T1ZXtjKGUA9JJjaeErFkiLuXo5
        4/obx5khG8ZYqgAk6bxATfOWhq5+ZsMYSxGAlJ1X0oTrr46hq5/ZKQvxA5DqttfzXq/iXX91zLv6mb2y
        EDcAqTqvlyZNJjsW73JeVYgXAKWxrLROYoAOg9JvXH8hKN3He0GqQtw7QAlN+o4us87agLSjRAlXro9Q
        dC4bfLZFVUjzIyjnSnXTQmU29AwBbQLNI5Ri59psgt53ZJnko6gKaQJgUfKjkiCVDKllKyVHKklSi5hK
        mtR7PSVRKpnS174NR2xnfVSF9AGYNOdtR0dRFRZWADRACvrKVYWFEQCl8h+zHayjKvQ/APqNabxsXxXC
        A6BtKdqeom0qvuP/B9q+s9l2LJSqEBYAbUjKXo8jZZJrw5JbZ5Jow5bGG61T9apCfQDmzeeRxuXauqYt
        bG79lGiLnuYDa9xzakpVGB+AsdmgSBmmWpHVpka3bUyUyKXNma1udx9VYTDYAtZZwTnboA60C7TNtU3C
        tQ9tv9U2XA2alvt8dmH4w2BwBazzs/Z4E9AK0MZnbYDWRmitCmtjtLXvonVDbbDWRmttuNbG6+gTK8vw
        h7k3xZ/Bl3CXPRYDpHQcbZHXVnltmddER/MEvaLXV7Dz5KkZs4NraMB96yv6BjAAAAAASUVORK5CYII=
</value>
  </data>
</root>